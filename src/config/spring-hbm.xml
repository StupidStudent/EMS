<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop            
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost/ems"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1994"></property>
		<!-- <property name="url" value="jdbc:mysql://w.rdc.sae.sina.com.cn:3307/app_zzone"></property> <property name="username" 
			value="32j2kyw502"></property> <property name="password" value="5jyy3yxmi52jhwyi1xl0yzlyjz0k0j452hz2x000"></property> -->

	</bean>

	<!-- 配置Hibernate4的SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>

		<!-- 交由注解扫描实体类，省去了以前hibernate的配置文件，自动生成数据表 -->
		<property name="packagesToScan" value="entity" />

	</bean>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- 配置Spring的事务处理 -->
	<!-- 创建事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置AOP，Spring是通过AOP来进行事务管理的 
	<aop:config>
		<aop:pointcut id="allMethods" expression="execution(* service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allMethods" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	-->

	<!-- 配置一个事务管理器 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> <property 
		name="sessionFactory" ref="sessionFactory" /> </bean> -->

	<!-- 配置事务，使用代理的方式 -->
	<!-- 所有Bean共享一个代理基类 <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true"> <property name="transactionManager" ref="transactionManager"></property> <property name="transactionAttributes"> 
		<props> <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop> <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop> 
		<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop> <prop key="*">PROPAGATION_REQUIRED</prop> </props> </property> 
		</bean> -->

</beans>